# akbor http/https
hostnamectl set-hostname server1.example.com
yum groups install -y "Basic Web Server"; yum install -y elinks
systemctl enable httpd --now
firewall-cmd --permanent --add-service=http
firewall-cmd --permanent --add-service=https
firewall-cmd --reload
firewall-cmd --list-all

# /etc/hosts a edit etmek lazim

# to generate default virtualhost put index.html into default documentroot directory
echo welcome to default virtualhost >> /var/www/html/index.html

# sonra configuration file ini hazir etmek lazim
vim /etc/httpd/conf.d/_vhost.conf
# bunun icine farkli document root olanlar varsa buraya yazmali sonra config ayarlari konmali

<Directory "/var/vhost1">
allowoverride none
require all granted
</Directory>

<VirtualHost *:80>
documentroot /var/www/html
servername server1.example.com
errorlog "logs/server1-error.log"
customlog "logs/server1-access.log" combined
</VirtualHost>



<VirtualHost *:80>
documentroot /var/vhost1
servername vhost1.example.com
errorlog "logs/vhost1-error.log"
customlog "logs/vhost1-access.log" combined
</VirtualHost>

<Directory "/var/www/html/private>
order deny,allow
deny from all
allow from 127.0.0.1 ::1 172.16.41.128
</Directory>


# PASSWORD PROTECTED PAGE
-imdi buradan soyle edecegiz.
-once bi htmli yaz sonra bi file a yeni bi document root olacak sekilde felan
htpasswd -c /etc/httpd/.password tm # bu passwordu bu file in icine yazacak user tm olarak.
-simdide configuration file ini edit etmek lazim.

<Directory "/var/www/html/passworded">
authtype basic
authname "password protected directory"
authuserfile /etc/httpd/.password
require valid-user
</Directory>







# TLS key generation
genkey server1.example.com # bu iki tane file olusturuyor
output will be written to /etc/pki/tls/certs/server1.example.com.crt
output key written to /etc/pki/tls/private/server1.example.com.key

<VirtualHost *:443>
        DocumentRoot /var/www/html
        ServerName server1.example.com
        errorlog "logs/secure-server1-error.log"
        customlog "logs/secure-server1-access.log" combined
        SSLEngine on
        SSLCertificateFile /etc/pki/tls/certs/server1.example.com.crt
        SSLCertificateKeyFile /etc/pki/tls/private/server1.example.com.key
</VirtualHost>

